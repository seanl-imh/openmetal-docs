"use strict";(self.webpackChunkopenmetal_docs=self.webpackChunkopenmetal_docs||[]).push([[1254],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return m}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var i=a.createContext({}),u=function(e){var t=a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=u(e.components);return a.createElement(i.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,i=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=u(n),m=r,k=d["".concat(i,".").concat(m)]||d[m]||p[m]||l;return n?a.createElement(k,o(o({ref:t},c),{},{components:n})):a.createElement(k,o({ref:t},c))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,o=new Array(l);o[0]=d;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s.mdxType="string"==typeof e?e:r,o[1]=s;for(var u=2;u<l;u++)o[u]=n[u];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},1434:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return i},metadata:function(){return u},toc:function(){return c},default:function(){return d}});var a=n(7462),r=n(3366),l=(n(7294),n(3905)),o=["components"],s={slug:"/kubernetes-guides/deploying-a-kubespray-cluster-to-openstack-using-terraform",description:"This guide will walk you through deploying a Kubespray cluster to OpenStack using Terraform.",sidebar_position:4},i="Deploying a Kubespray cluster to OpenStack using Terraform",u={unversionedId:"kubernetes-guides/kubespray",id:"kubernetes-guides/kubespray",title:"Deploying a Kubespray cluster to OpenStack using Terraform",description:"This guide will walk you through deploying a Kubespray cluster to OpenStack using Terraform.",source:"@site/docs/kubernetes-guides/kubespray.md",sourceDirName:"kubernetes-guides",slug:"/kubernetes-guides/deploying-a-kubespray-cluster-to-openstack-using-terraform",permalink:"/docs/manuals/kubernetes-guides/deploying-a-kubespray-cluster-to-openstack-using-terraform",editUrl:"https://github.com/openmetalio/openmetal-docs/blob/main/docs/kubernetes-guides/kubespray.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{slug:"/kubernetes-guides/deploying-a-kubespray-cluster-to-openstack-using-terraform",description:"This guide will walk you through deploying a Kubespray cluster to OpenStack using Terraform.",sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Installing a Rancher managed cluster on OpenStack",permalink:"/docs/manuals/kubernetes-guides/installing-a-rancher-cluster-on-openstack"},next:{title:"Installing the Kubernetes OpenStack Cloud Controller Manager",permalink:"/docs/manuals/kubernetes-guides/installing-the-kubernetes-openstack-cloud-controller-manager"}},c=[{value:"Kubespray Features",id:"kubespray-features",children:[],level:2},{value:"Prerequisites",id:"prerequisites",children:[],level:2},{value:"Prepare deployment environment",id:"prepare-deployment-environment",children:[{value:"Install Terraform",id:"install-terraform",children:[],level:3},{value:"Install Ansible",id:"install-ansible",children:[],level:3},{value:"Setup the OpenStack CLI",id:"setup-the-openstack-cli",children:[],level:3},{value:"Create a OpenStack project",id:"create-a-openstack-project",children:[],level:3}],level:2},{value:"Deploy the infrastructure with Terraform",id:"deploy-the-infrastructure-with-terraform",children:[{value:"Set environment variables",id:"set-environment-variables",children:[],level:3},{value:"Generate SSH key",id:"generate-ssh-key",children:[],level:3},{value:"Clone Kubespray",id:"clone-kubespray",children:[],level:3},{value:"Prepare your cluster configuration",id:"prepare-your-cluster-configuration",children:[],level:3},{value:"Configure Terraform variables",id:"configure-terraform-variables",children:[],level:3},{value:"Initialize Terraform",id:"initialize-terraform",children:[],level:3},{value:"Apply the terraform plan",id:"apply-the-terraform-plan",children:[],level:3}],level:2},{value:"Deploy Kubernetes with Ansible",id:"deploy-kubernetes-with-ansible",children:[{value:"Update <code>group_vars/all/all.yml</code>",id:"update-group_varsallallyml",children:[],level:3},{value:"Update <code>group_vars/all/openstack.yml</code>",id:"update-group_varsallopenstackyml",children:[],level:3},{value:"Deploy Kubernetes",id:"deploy-kubernetes",children:[],level:3}],level:2},{value:"Verify Kubernetes Installation",id:"verify-kubernetes-installation",children:[{value:"Access your bastion node (Optional)",id:"access-your-bastion-node-optional",children:[{value:"List your nodes",id:"list-your-nodes",children:[],level:4},{value:"SSH into your bastion node",id:"ssh-into-your-bastion-node",children:[],level:4}],level:3},{value:"Install Kubectl",id:"install-kubectl",children:[],level:3},{value:"Create configuration file",id:"create-configuration-file",children:[],level:3},{value:"Test Connection",id:"test-connection",children:[],level:3},{value:"Save your configuration",id:"save-your-configuration",children:[],level:3}],level:2},{value:"Verify OpenStack Cloud Provider",id:"verify-openstack-cloud-provider",children:[{value:"Verify Load balancer",id:"verify-load-balancer",children:[],level:3},{value:"Verify Cinder",id:"verify-cinder",children:[],level:3}],level:2},{value:"Deploy a pod that used the volume",id:"deploy-a-pod-that-used-the-volume",children:[],level:2},{value:"Verify the volume is bound",id:"verify-the-volume-is-bound",children:[{value:"Verify the volume exists in OpenStack",id:"verify-the-volume-exists-in-openstack",children:[],level:3}],level:2},{value:"All Done",id:"all-done",children:[],level:2}],p={toc:c};function d(e){var t=e.components,n=(0,r.Z)(e,o);return(0,l.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"deploying-a-kubespray-cluster-to-openstack-using-terraform"},"Deploying a Kubespray cluster to OpenStack using Terraform"),(0,l.kt)("p",null,"Kubespray is a community-driven project that provides a set of Ansible playbooks\nto deploy a production-ready Kubernetes cluster. It is a great tool to deploy a\nKubernetes cluster on OpenStack! This guide will show you how to use Terraform to\nautomate the deployment of your OpenStack infrastructure and then use Ansible to\ndeploy a Kubespray cluster on top of it."),(0,l.kt)("p",null,"We'll be using the following official Kubespray documentation as a reference:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/kubernetes-sigs/kubespray/blob/v2.20.0/contrib/terraform/openstack/README.md"},"Kubespray - Terraform for OpenStack")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://kubespray.io/#/docs/openstack"},"Kubespray - Configuring OpenStack"))),(0,l.kt)("h2",{id:"kubespray-features"},"Kubespray Features"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"support for most popular network plugins (Calico, Cilium, Contiv, Flannel,\nMultus, Weave, Kube-router, Romana, Amazon VPC CNI, etc.)"),(0,l.kt)("li",{parentName:"ul"},"support for most popular Linux distributions"),(0,l.kt)("li",{parentName:"ul"},"upgrade support from a previous Kubernetes version"),(0,l.kt)("li",{parentName:"ul"},"composable attributes"),(0,l.kt)("li",{parentName:"ul"},"declarative way to customize cluster configuration through a\nconfiguration file"),(0,l.kt)("li",{parentName:"ul"},"network load balancer (MetalLB) for services of type LoadBalancer"),(0,l.kt)("li",{parentName:"ul"},"configurable bootstrap tools for the Kubernetes cluster"),(0,l.kt)("li",{parentName:"ul"},"multi-purpose bootstrap node used as a bastion (optional)"),(0,l.kt)("li",{parentName:"ul"},"GPU node support")),(0,l.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"An OpenStack instance. If you don't have OpenStack, you can sign up for a free\ntrial today with OpenMetal ",(0,l.kt)("a",{parentName:"li",href:"https://central.openmetal.io/sign-up"},"OpenMetal Central"),".")),(0,l.kt)("h2",{id:"prepare-deployment-environment"},"Prepare deployment environment"),(0,l.kt)("p",null,"We'll be performing this deployment from a VM running Ubuntu 20.04. You\ncan also use one of your OpenMetal cloud core nodes or your work station. Our\nguide will have you install Terraform and Ansible in your installation environment."),(0,l.kt)("h3",{id:"install-terraform"},"Install Terraform"),(0,l.kt)("p",null,"Terraform is a tool for building, changing, and versioning infrastructure safely\nand efficiently. Terraform can manage existing and popular service providers\nas well as custom in-house solutions. Configuration files describe to Terraform\nthe components needed to run a single application or your entire data center."),(0,l.kt)("p",null,"Terraform generates an execution plan describing what it will do to reach the\ndesired state, and then executes it to build the described infrastructure. As\nthe configuration changes, Terraform is able to determine what changed and\ncreate incremental execution plans which can be applied. This allows for high\nfidelity plans and helps reduce the possibility of out-of-band changes, including\ndrift and conflicts."),(0,l.kt)("p",null,"For non Debian based systems, please see the ",(0,l.kt)("a",{parentName:"p",href:"https://www.terraform.io/downloads"},"Terraform Installation Instructions"),"."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'wget -O- https://apt.releases.hashicorp.com/gpg | gpg --dearmor | sudo tee /usr/share/keyrings/hashicorp-archive-keyring.gpg\necho "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list\nsudo apt update && sudo apt install terraform\n')),(0,l.kt)("h3",{id:"install-ansible"},"Install Ansible"),(0,l.kt)("p",null,"The playbooks require an ansible-core version between 2.11.0 and 2.13.0. The following\nwill install ansible core version 2.12.9."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"sudo apt-get install python3-pip\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"python3 -m pip install --user ansible==5.10.0\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"pip install netaddr\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"export PATH=$PATH:$HOME/.local/bin\n")),(0,l.kt)("h3",{id:"setup-the-openstack-cli"},"Setup the OpenStack CLI"),(0,l.kt)("p",null,"We'll be using the CLI to help populate our Terraform variables. If you don't have\naccess to the OpenStack CLI, please follow the steps in this guide:\n",(0,l.kt)("a",{parentName:"p",href:"/docs/manuals/operators-manual/day-1/command-line/openstackclient#how-to-install-openstackclient"},"How to Install and Use OpenStack's CLI"),"."),(0,l.kt)("h3",{id:"create-a-openstack-project"},"Create a OpenStack project"),(0,l.kt)("p",null,"We'll be creating a project to deploy our infrastructure into. You can use an\nexisting project if you have one."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'openstack project create --domain default --description "Kubespray Cluster" kubespray-demo\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"openstack role add --project rke1 --user admin admin\n")),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Note: You can substitute the admin user if you already have your own user.")),(0,l.kt)("h2",{id:"deploy-the-infrastructure-with-terraform"},"Deploy the infrastructure with Terraform"),(0,l.kt)("h3",{id:"set-environment-variables"},"Set environment variables"),(0,l.kt)("p",null,'You may have already done this if you have used the OpenStack CLI. If not, you\ncan download your openrc file from the OpenStack dashboard. You can find it\nunder your projects "API Access" menu item. Download the OpenStack RC File, save\nit to your workspace, and source it.'),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"This is an important step")," as it will set the environment variables that Terraform\nwill use to authenticate with OpenStack. Double check that the values are correct."),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"openrc.sh")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"OS_AUTH_URL=https://openstack:5000\nOS_PROJECT_ID=projectid\nOS_PROJECT_NAME=username\nOS_PROJECT_DOMAIN_ID=default\nOS_USERNAME=username\nOS_PASSWORD=password\nOS_REGION_NAME=RegionOne\nOS_INTERFACE=public\nOS_IDENTITY_API_VERSION=3\nOS_USER_DOMAIN_NAME=Default\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"source openrc.sh\n")),(0,l.kt)("h3",{id:"generate-ssh-key"},"Generate SSH key"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"ssh-keygen -t ed25519 -N '' -f ~/.ssh/id_rsa.kubespray\n")),(0,l.kt)("h3",{id:"clone-kubespray"},"Clone Kubespray"),(0,l.kt)("p",null,"Pull down the kubespray repository. It contains the ansible playbooks and the\nterraform templates we'll be using."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"git clone --depth 1 --branch v2.20.0  https://github.com/kubernetes-sigs/kubespray\n")),(0,l.kt)("h3",{id:"prepare-your-cluster-configuration"},"Prepare your cluster configuration"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"cd kubespray\ncp -LRp contrib/terraform/openstack/sample-inventory inventory/test-cluster\ncd inventory/test-cluster\nln -s ../../contrib/terraform/openstack/hosts\nln -s ../../contrib\n")),(0,l.kt)("h3",{id:"configure-terraform-variables"},"Configure Terraform variables"),(0,l.kt)("p",null,"The previous commands generated a few files for you including a ",(0,l.kt)("inlineCode",{parentName:"p"},"cluster.tfvars"),"\nfile. This file will be used to configure your nodes and networks to use for\nyour cluster. Refer to ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/kubernetes-sigs/kubespray/blob/v2.20.0/contrib/terraform/openstack/README.md#cluster-variables"},"Cluster Variables"),"\ndocumentation for a full list of variables."),(0,l.kt)("p",null,"For this example, we'll be using the following variables:"),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Note: We've added comments to help you fetch the values you want to replace from\nOpenstack.")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'cluster_name = "test-cluster"\n\npublic_key_path = "~/.ssh/id_rsa.kubespray.pub"\n\nimage = "Ubuntu 20.04 (focal-amd64)"\n\nssh_user = "ubuntu"\n\n## Path to your cluster group vars directory\ngroup_vars_path="<group_vars_path>/kubespray/inventory/test-cluster/group_vars"\n\nnumber_of_bastions = 1\n\n# List available flavors command: openstack flavor list\nflavor_bastion = "gp1.small"\n\nnumber_of_etcd = 0\nnumber_of_k8s_masters = 0\nnumber_of_k8s_masters_no_etcd = 0\nnumber_of_k8s_masters_no_floating_ip = 1\nnumber_of_k8s_masters_no_floating_ip_no_etcd = 0\n\n# List available flavors command: openstack flavor list\nflavor_k8s_master = "gp1.large"\n\nnumber_of_k8s_nodes = 0\nnumber_of_k8s_nodes_no_floating_ip = 2\n\n# List available flavors command: openstack flavor list\nflavor_k8s_node = "gp1.large"\n\nnetwork_name = "test-cluster-network"\n\n# Fetch this value with this command: openstack network list --external\nexternal_net = "<external_network_id>"\n\nsubnet_cidr = "172.29.0.0/25"\n\nfloatingip_pool = "External"\n\nbastion_allowed_remote_ips = ["0.0.0.0/0"]\n')),(0,l.kt)("h3",{id:"initialize-terraform"},"Initialize Terraform"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'terraform -chdir="../../contrib/terraform/openstack" init\n')),(0,l.kt)("h3",{id:"apply-the-terraform-plan"},"Apply the terraform plan"),(0,l.kt)("p",null,"You'll be prompted to confirm your changes to OpenStack, type ",(0,l.kt)("inlineCode",{parentName:"p"},"yes")," to continue.\nAfter this process completes, your OpenStack project will have any required resources\nto deploy Kubernetes."),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Note: Run this command from the kubespray/inventory/test-cluster directory.")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},' terraform -chdir="../../contrib/terraform/openstack" apply -var-file=$PWD/cluster.tfvars\n')),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Note: If you want to destroy your resources, you can run the following command:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'terraform -chdir="../../contrib/terraform/openstack" destroy -var-file=$PWD/cluster.tfvars\n')),(0,l.kt)("h2",{id:"deploy-kubernetes-with-ansible"},"Deploy Kubernetes with Ansible"),(0,l.kt)("p",null,"The previous Terraform created your nodes and an Ansible inventory file for you.\nNext, we need to prepare the ansible variables. When configuring your cluster,\nyou'll likley want to configure more options than what we've provided here. For\na full list of options, refer to the ",(0,l.kt)("a",{parentName:"p",href:"https://kubespray.io/#/docs"},"Kubespray Documentation"),"."),(0,l.kt)("p",null,"This is a list of options we updated to deploy the cluster with the OpenStack Cloud\nProvider, Cinder CSI, and support for Octavia load balancers."),(0,l.kt)("h3",{id:"update-group_varsallallyml"},"Update ",(0,l.kt)("inlineCode",{parentName:"h3"},"group_vars/all/all.yml")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"cloud_provider: external\nexternal_cloud_provider: openstack\n")),(0,l.kt)("h3",{id:"update-group_varsallopenstackyml"},"Update ",(0,l.kt)("inlineCode",{parentName:"h3"},"group_vars/all/openstack.yml")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"cinder_csi_enabled: true\ncinder_csi_ignore_volume_az: true\n")),(0,l.kt)("h3",{id:"deploy-kubernetes"},"Deploy Kubernetes"),(0,l.kt)("p",null,"Your ready to deploy Kubernetes. The following command needs to be run from the\nkubespray directory. The process will take some time to complete depending on the\nnumber of resources you wish to deploy. In our example, it took about 12 minutes."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"cd ../..\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"ansible-playbook -i inventory/test-cluster/hosts.yaml --become --become-user=root cluster.yml\n")),(0,l.kt)("h2",{id:"verify-kubernetes-installation"},"Verify Kubernetes Installation"),(0,l.kt)("h3",{id:"access-your-bastion-node-optional"},"Access your bastion node (Optional)"),(0,l.kt)("p",null,"If you followed along with the guide, you'll have a bastion node that you can\nuse to access your cluster. If you don't have a bastion node, you can skip this\nstep."),(0,l.kt)("h4",{id:"list-your-nodes"},"List your nodes"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"openstack server list\n")),(0,l.kt)("h4",{id:"ssh-into-your-bastion-node"},"SSH into your bastion node"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"ssh -i ~/.ssh/id_rsa.kubespray ubuntu@<bastion_ip>\n")),(0,l.kt)("h3",{id:"install-kubectl"},"Install Kubectl"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl\n")),(0,l.kt)("h3",{id:"create-configuration-file"},"Create configuration file"),(0,l.kt)("p",null,"We need to copy certificates from the master node to create a configuration file\nthat can be used to authenticate with the cluster. Replace the ",(0,l.kt)("inlineCode",{parentName:"p"},"<master_ip>")," with\nthe IP address of your master node."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"ssh ubuntu@[master-ip] sudo cat /etc/kubernetes/ssl/apiserver-kubelet-client.key > client.key\nssh ubuntu@[master-ip] sudo cat /etc/kubernetes/ssl/apiserver-kubelet-client.crt > client.crt\nssh ubuntu@[master-ip] sudo cat /etc/kubernetes/ssl/ca.crt > ca.crt\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl config set-cluster default-cluster --server=https://[master-ip]:6443 \\\n    --certificate-authority=ca.crt --embed-certs=true\n\nkubectl config set-credentials default-admin \\\n  --certificate-authority=ca.crt \\\n  --client-key=client.key \\\n  --client-certificate=client.crt \\\n  --embed-certs=true\n")),(0,l.kt)("h3",{id:"test-connection"},"Test Connection"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"}," kubectl get pods -A\n")),(0,l.kt)("p",null,"Output:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"NAMESPACE     NAME                                                   READY   STATUS    RESTARTS   AGE\nkube-system   coredns-74d6c5659f-b9lrn                               1/1     Running   0          13h\nkube-system   coredns-74d6c5659f-t9q6q                               1/1     Running   0          13h\nkube-system   csi-cinder-controllerplugin-9b75f6cc7-hpwn5            6/6     Running   0          11h\nkube-system   csi-cinder-nodeplugin-75vt5                            3/3     Running   0          11h\nkube-system   csi-cinder-nodeplugin-jhdng                            3/3     Running   0          11h\nkube-system   dns-autoscaler-59b8867c86-cv5nm                        1/1     Running   0          13h\nkube-system   kube-apiserver-test-cluster-k8s-master-nf-1            1/1     Running   1          13h\nkube-system   kube-flannel-dstxm                                     1/1     Running   0          13h\n...\n")),(0,l.kt)("h3",{id:"save-your-configuration"},"Save your configuration"),(0,l.kt)("p",null,"You should now have a working configuration file. You can now save this in a safe\nplace to access your cluster from a machine that can reach your master node."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"cat ~/.kube/config\n")),(0,l.kt)("h2",{id:"verify-openstack-cloud-provider"},"Verify OpenStack Cloud Provider"),(0,l.kt)("p",null,"By enabling the OpenStack Cloud Provider, Kubespray configured a few pods that\nshould now be in the running state."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl get pods -A | grep 'csi\\|openstack'\n")),(0,l.kt)("p",null,"Output:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"kube-system   csi-cinder-controllerplugin-9b75f6cc7-hpwn5            6/6     Running   0          11h\nkube-system   csi-cinder-nodeplugin-75vt5                            3/3     Running   0          11h\nkube-system   csi-cinder-nodeplugin-jhdng                            3/3     Running   0          11h\nkube-system   openstack-cloud-controller-manager-d7wbb               1/1     Running   0          11h\n")),(0,l.kt)("h3",{id:"verify-load-balancer"},"Verify Load balancer"),(0,l.kt)("p",null,"The OpenStack Cloud Provider supports Octavia load balancers. You can verify\nthat the load balancer is working by creating a service of type ",(0,l.kt)("inlineCode",{parentName:"p"},"LoadBalancer"),".\nWhen you create the service, you should see a new load balancer created in the\nOpenStack dashboard."),(0,l.kt)("p",null,"Create a service by running the following command:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl apply -f - <<EOF\napiVersion: v1\nkind: Service\nmetadata:\n  name: fake-service\nspec:\n  type: LoadBalancer\n  ports:\n  - port: 80\n    targetPort: 80\n  selector:\n    app: fake-service\nEOF\n")),(0,l.kt)("p",null,"You can verify that the load balancer was created by running the following command:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"openstack loadbalancer list\n")),(0,l.kt)("p",null,"You should also see a floating ip associated with the load balancer service in kubernetes.\nThis may take a couple of minutes to complete."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl get svc -A -w\n")),(0,l.kt)("p",null,"Output:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"NAMESPACE     NAME              TYPE           CLUSTER-IP      EXTERNAL-IP      PORT(S)                  AGE\ndefault       hostname-server   LoadBalancer   10.233.32.201   127.0.0.1        80:32709/TCP             12h\n")),(0,l.kt)("h3",{id:"verify-cinder"},"Verify Cinder"),(0,l.kt)("p",null,"Next we'll verify that Cinder volumes are working. Create a PersistentVolumeClaim\nby running the following command:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"apply -f - <<EOF\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: test-volume\n  namespace: default\nspec:\n  accessModes:\n  - ReadWriteOnce\n  storageClassName: cinder-csi\n  resources:\n    requests:\n      storage: 1Gi\nEOF\n")),(0,l.kt)("h2",{id:"deploy-a-pod-that-used-the-volume"},"Deploy a pod that used the volume"),(0,l.kt)("p",null,"We'll deploy a redis instance, which will use the volume we created in the\nprevious step."),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Note: This is just an example. Do not use this in production.")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl apply -f - <<EOF\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: redis\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: redis\n  template:\n    metadata:\n      labels:\n        app: redis\n    spec:\n      containers:\n      - image: redis\n        name: redis\n        volumeMounts:\n        - mountPath: /var/lib/redis\n          name: redis-data\n      volumes:\n      - name: redis-data\n        persistentVolumeClaim:\n          claimName: test-volume\nEOF\n")),(0,l.kt)("h2",{id:"verify-the-volume-is-bound"},"Verify the volume is bound"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl get pvc -A\n")),(0,l.kt)("p",null,"Output:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"NAMESPACE   NAME            STATUS    VOLUME                                     CAPACITY   ACCESS MODES   STORAGECLASS    AGE\ndefault     test-volume     Bound     pvc-f7ceeaae-86aa-4ab3-9512-bb65f7d6c5f0   1Gi        RWO            cinder-csi      12h\n")),(0,l.kt)("h3",{id:"verify-the-volume-exists-in-openstack"},"Verify the volume exists in OpenStack"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"openstack volume list\n")),(0,l.kt)("h2",{id:"all-done"},"All Done"),(0,l.kt)("p",null,"You should now have a working Kubernetes cluster with the OpenStack Cloud Provider\nenabled. You can now deploy your applications to the cluster."))}d.isMDXComponent=!0}}]);