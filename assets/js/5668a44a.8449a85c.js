"use strict";(self.webpackChunkopenmetal_docs=self.webpackChunkopenmetal_docs||[]).push([[3157],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=a.createContext({}),s=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=s(e.components);return a.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,c=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),d=s(n),m=r,f=d["".concat(c,".").concat(m)]||d[m]||p[m]||i;return n?a.createElement(f,l(l({ref:t},u),{},{components:n})):a.createElement(f,l({ref:t},u))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=d;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var s=2;s<i;s++)l[s]=n[s];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5982:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return c},metadata:function(){return s},toc:function(){return u},default:function(){return d}});var a=n(7462),r=n(3366),i=(n(7294),n(3905)),l=["components"],o={},c="How to install and configure Barbican on your OpenMetal Cloud",s={unversionedId:"tutorials/install-configure-barbican-openmetal",id:"tutorials/install-configure-barbican-openmetal",title:"How to install and configure Barbican on your OpenMetal Cloud",description:"What is Barbican?",source:"@site/docs/tutorials/install-configure-barbican-openmetal.md",sourceDirName:"tutorials",slug:"/tutorials/install-configure-barbican-openmetal",permalink:"/docs/manuals/tutorials/install-configure-barbican-openmetal",editUrl:"https://github.com/openmetalio/openmetal-docs/blob/main/docs/tutorials/install-configure-barbican-openmetal.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Backing Up Important Data",permalink:"/docs/manuals/tutorials/backing-up-important-data"},next:{title:"Create EC2 Credentials for Swift S3 API Access",permalink:"/docs/manuals/openstack-admin/access-swift-s3-api"}},u=[{value:"What is Barbican?",id:"what-is-barbican",children:[],level:2},{value:"What can I do with a Secret Store?",id:"what-can-i-do-with-a-secret-store",children:[],level:2},{value:"Prerequisites",id:"prerequisites",children:[],level:2},{value:"Step 1 - Modify your kolla-ansible config",id:"step-1---modify-your-kolla-ansible-config",children:[],level:2},{value:"Step 2 - Reconfigure kolla-ansible",id:"step-2---reconfigure-kolla-ansible",children:[],level:2},{value:"Step 3 - Verify that the Barbican endpoints are there",id:"step-3---verify-that-the-barbican-endpoints-are-there",children:[],level:2},{value:"Step 4 - Install the Barbican OpenStack CLI",id:"step-4---install-the-barbican-openstack-cli",children:[],level:2},{value:"Step 5 - Create a test secret",id:"step-5---create-a-test-secret",children:[],level:2}],p={toc:u};function d(e){var t=e.components,n=(0,r.Z)(e,l);return(0,i.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"how-to-install-and-configure-barbican-on-your-openmetal-cloud"},"How to install and configure Barbican on your OpenMetal Cloud"),(0,i.kt)("h2",{id:"what-is-barbican"},"What is Barbican?"),(0,i.kt)("p",null,"Barbican is the OpenStack Key Manager service. It provides secure storage,\nprovisioning and management of secret data. This includes keying material such\nas Symmetric Keys, Asymmetric Keys, Certificates and raw binary data."),(0,i.kt)("h2",{id:"what-can-i-do-with-a-secret-store"},"What can I do with a Secret Store?"),(0,i.kt)("p",null,"With Barbican configured the service can be utilized for a number of use cases."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Image signature verification"),(0,i.kt)("li",{parentName:"ul"},"Disk and volume encryption"),(0,i.kt)("li",{parentName:"ul"},"SSL/TLS keypair storage"),(0,i.kt)("li",{parentName:"ul"},"Secure password storage")),(0,i.kt)("p",null,"See the ",(0,i.kt)("a",{parentName:"p",href:"https://docs.openstack.org/security-guide/secrets-management/secrets-management-use-cases.html"},"OpenStack Security Guide"),"\nfor additional information."),(0,i.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"SSH Access to your OMI Nodes"),(0,i.kt)("li",{parentName:"ul"},"A ",(0,i.kt)("a",{parentName:"li",href:"https://openmetal.io/docs/manuals/operators-manual/day-4/kolla-ansible/prepare-kolla-ansible"},"python virtual environment for kolla-ansible"))),(0,i.kt)("h2",{id:"step-1---modify-your-kolla-ansible-config"},"Step 1 - Modify your kolla-ansible config"),(0,i.kt)("p",null,"The kolla-ansible config file lives in ",(0,i.kt)("inlineCode",{parentName:"p"},"/etc/kolla/globals.yml")," you will want to\nmodify that file an add the following in a new line within the config."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"enable_barbican: 'yes'\n\n## NOTE: The below options are optional. Remove the '# ' in font to use them.\n# Valid options are [ simple_crypto, p11_crypto ]\n# barbican_crypto_plugin: \"simple_crypto\"\n# barbican_library_path: \"/usr/lib/libCryptoki2_64.so\"\n")),(0,i.kt)("h2",{id:"step-2---reconfigure-kolla-ansible"},"Step 2 - Reconfigure kolla-ansible"),(0,i.kt)("p",null,"Whenever calling ",(0,i.kt)("inlineCode",{parentName:"p"},"kolla-ansible")," you will want to note these 2 important files:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Kolla Ansible Inventory:\xa0",(0,i.kt)("inlineCode",{parentName:"li"},"/etc/fm-deploy/kolla-ansible-inventory")),(0,i.kt)("li",{parentName:"ul"},"Kolla Ansible Main Configuration:\xa0",(0,i.kt)("inlineCode",{parentName:"li"},"/etc/kolla/globals.yml"))),(0,i.kt)("p",null,"Once you have ensured that your configuration and inventory are there you will\nwant to run the following command to install and configure Barbican to your cloud."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"kolla-ansible -i /etc/fm-deploy/kolla-ansible-inventory reconfigure\n")),(0,i.kt)("h2",{id:"step-3---verify-that-the-barbican-endpoints-are-there"},"Step 3 - Verify that the Barbican endpoints are there"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"(.venv) [root@fierce-possum kolla]# openstack endpoint list --service barbican\n+----------------------------------+--------+--------------+--------------+---------+-----------+---------------------------+\n| ID                               | Region | Service Name | Service Type | Enabled | Interface | URL                       |\n+----------------------------------+--------+--------------+--------------+---------+-----------+---------------------------+\n| bbebfdc0f6ce4f9895d536785fa3cfea | iad3   | barbican     | key-manager  | True    | public    | http://200.225.44.4:9311  |\n| c7c9861c34ed44de8a3f65b9d74f80fa | iad3   | barbican     | key-manager  | True    | admin     | http://192.168.2.254:9311 |\n| da1d9afd031f470d80866256884ef242 | iad3   | barbican     | key-manager  | True    | internal  | http://192.168.2.254:9311 |\n+----------------------------------+--------+--------------+--------------+---------+-----------+---------------------------+\n")),(0,i.kt)("h2",{id:"step-4---install-the-barbican-openstack-cli"},"Step 4 - Install the Barbican OpenStack CLI"),(0,i.kt)("p",null,"While in your virtual environment, install the OpenStack CLI library for secret\nstorage."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"(.venv) [root@fierce-possum kolla]# pip install python-barbicanclient\n")),(0,i.kt)("h2",{id:"step-5---create-a-test-secret"},"Step 5 - Create a test secret"),(0,i.kt)("p",null,"Just to validate that its working, run the following command to create your\nfirst test secret."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"(.venv) [root@fierce-possum kolla]# openstack secret store --name my_secret --payload 'This is a secure statement'\n+---------------+--------------------------------------------------------------------------+\n| Field         | Value                                                                    |\n+---------------+--------------------------------------------------------------------------+\n| Secret href   | http://200.225.44.4:9311/v1/secrets/973cffdb-d4b1-418c-befa-9f67d77a982b |\n| Name          | my_secret                                                                |\n| Created       | None                                                                     |\n| Status        | None                                                                     |\n| Content types | None                                                                     |\n| Algorithm     | aes                                                                      |\n| Bit length    | 256                                                                      |\n| Secret type   | opaque                                                                   |\n| Mode          | cbc                                                                      |\n| Expiration    | None                                                                     |\n+---------------+--------------------------------------------------------------------------+ \n")))}d.isMDXComponent=!0}}]);