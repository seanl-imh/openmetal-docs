"use strict";(self.webpackChunkopenmetal_docs=self.webpackChunkopenmetal_docs||[]).push([[5161],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),s=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=s(n),m=a,h=d["".concat(c,".").concat(m)]||d[m]||p[m]||i;return n?r.createElement(h,o(o({ref:t},u),{},{components:n})):r.createElement(h,o({ref:t},u))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=d;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var s=2;s<i;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},98:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return c},metadata:function(){return s},toc:function(){return u},default:function(){return d}});var r=n(7462),a=n(3366),i=(n(7294),n(3905)),o=["components"],l={},c="Backup VM Data to Ceph with Swift S3API",s={unversionedId:"tutorials/backing-up-with-s3cmd",id:"tutorials/backing-up-with-s3cmd",title:"Backup VM Data to Ceph with Swift S3API",description:"Overview",source:"@site/docs/tutorials/backing-up-with-s3cmd.md",sourceDirName:"tutorials",slug:"/tutorials/backing-up-with-s3cmd",permalink:"/docs/manuals/tutorials/backing-up-with-s3cmd",editUrl:"https://github.com/openmetalio/openmetal-docs/blob/main/docs/tutorials/backing-up-with-s3cmd.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Create a Site-to-Site VPN Connection with Endpoint Groups",permalink:"/docs/manuals/tutorials/create-site-to-site-vpn"},next:{title:"Backing Up Important Data",permalink:"/docs/manuals/tutorials/backing-up-important-data"}},u=[{value:"Overview",id:"overview",children:[],level:2},{value:"Prerequisites",id:"prerequisites",children:[{value:"Environment",id:"environment",children:[],level:3}],level:2},{value:"S3cmd",id:"s3cmd",children:[{value:"Reasoning",id:"reasoning",children:[],level:3}],level:2},{value:"Preparation",id:"preparation",children:[],level:2},{value:"Initial S3cmd sync",id:"initial-s3cmd-sync",children:[],level:2}],p={toc:u};function d(e){var t=e.components,n=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"backup-vm-data-to-ceph-with-swift-s3api"},"Backup VM Data to Ceph with Swift S3API"),(0,i.kt)("h2",{id:"overview"},"Overview"),(0,i.kt)("p",null,"In this guide we will demonstrate generating backups of important data from a\nproduction VM to Ceph backed object storage on your OpenMetal cloud using the\nS3cmd tool."),(0,i.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/manuals/openstack-admin/access-swift-s3-api"},"EC2 Credentials")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/manuals/openstack-admin/swift-s3-api-access-with-s3cmd"},"S3cmd CLI tool")),(0,i.kt)("li",{parentName:"ul"},"Familiarity with ",(0,i.kt)("a",{parentName:"li",href:"/docs/manuals/tutorials/backing-up-important-data"},"Backing Up Important Data"))),(0,i.kt)("h3",{id:"environment"},"Environment"),(0,i.kt)("p",null,"For this demonstration we have an Ubuntu focal instance serving WordPress on an\noptimized LEMP stack managed by Ansible. In this example, all service and server\nconfiguration is handled by Ansible, so only user and CMS specific content need\nbe backed up."),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"The demo environment was deployed using the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/inmotionhosting/wordpress-ultrastack-ansible"},"WordPress UltraStack"),"\nAnsible playbook.")),(0,i.kt)("h2",{id:"s3cmd"},"S3cmd"),(0,i.kt)("h3",{id:"reasoning"},"Reasoning"),(0,i.kt)("p",null,"S3cmd is chosen as the preferred tool in this example due to it's ",(0,i.kt)("inlineCode",{parentName:"p"},"sync")," option\nproviding similar functionality and ownership/permission preservation to the\nLinux native rsync tool."),(0,i.kt)("h2",{id:"preparation"},"Preparation"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Create a bucket using the server hostname or otherwise unique ID:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"$ s3cmd mb s3://$(hostname)\nBucket 's3://back-me-up/' created\n"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Export a full backup of the CMS database:"),(0,i.kt)("blockquote",{parentName:"li"},(0,i.kt)("p",{parentName:"blockquote"},(0,i.kt)("strong",{parentName:"p"},"Note"),": We perform this manually for illustrative purposes, ideally this\nprocess is performed on a scheduled cron using native tooling.")),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"mkdir sql-dump\ncd sql-dump\n\n# Dump DB via WP-CLI\n$ wp db export --path=\"../doc_root\"\nSuccess: Exported to 'ubuntu-2022-11-29-96d8f99.sql'.\n")))),(0,i.kt)("h2",{id:"initial-s3cmd-sync"},"Initial S3cmd sync"),(0,i.kt)("p",null,"We perform an initial sync of the user directory which includes the SQL dump\nfiles and document root, excluding all cache folders with the command below:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},'s3cmd sync --exclude="*/cache/*" /home/ubuntu s3://back-me-up/$(date -u +%Y-%m-%dT%H:%M:%SZ)/\n')))}d.isMDXComponent=!0}}]);