"use strict";(self.webpackChunkopenmetal_docs=self.webpackChunkopenmetal_docs||[]).push([[5669],{3905:function(e,t,r){r.d(t,{Zo:function(){return s},kt:function(){return p}});var o=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,o,n=function(e,t){if(null==e)return{};var r,o,n={},a=Object.keys(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var u=o.createContext({}),c=function(e){var t=o.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},s=function(e){var t=c(e.components);return o.createElement(u.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var r=e.components,n=e.mdxType,a=e.originalType,u=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),m=c(r),p=n,f=m["".concat(u,".").concat(p)]||m[p]||d[p]||a;return r?o.createElement(f,i(i({ref:t},s),{},{components:r})):o.createElement(f,i({ref:t},s))}));function p(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=r.length,i=new Array(a);i[0]=m;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l.mdxType="string"==typeof e?e:n,i[1]=l;for(var c=2;c<a;c++)i[c]=r[c];return o.createElement.apply(null,i)}return o.createElement.apply(null,r)}m.displayName="MDXCreateElement"},8561:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return l},contentTitle:function(){return u},metadata:function(){return c},toc:function(){return s},default:function(){return m}});var o=r(7462),n=r(3366),a=(r(7294),r(3905)),i=["components"],l={slug:"/terraform/configure-terraform-to-automate-openstack-resources",description:"In this guide you will configure Terraform to leverage OpenStack with a generated clouds.yaml."},u="How to Configure Terraform to Automate OpenStack\u2019s Resources",c={unversionedId:"engineers-notes/configure-terraform-to-automate-openstacks-resources",id:"engineers-notes/configure-terraform-to-automate-openstacks-resources",title:"How to Configure Terraform to Automate OpenStack\u2019s Resources",description:"In this guide you will configure Terraform to leverage OpenStack with a generated clouds.yaml.",source:"@site/docs/engineers-notes/configure-terraform-to-automate-openstacks-resources.md",sourceDirName:"engineers-notes",slug:"/terraform/configure-terraform-to-automate-openstack-resources",permalink:"/docs/manuals/terraform/configure-terraform-to-automate-openstack-resources",editUrl:"https://github.com/openmetalio/openmetal-docs/blob/main/docs/engineers-notes/configure-terraform-to-automate-openstacks-resources.md",tags:[],version:"current",frontMatter:{slug:"/terraform/configure-terraform-to-automate-openstack-resources",description:"In this guide you will configure Terraform to leverage OpenStack with a generated clouds.yaml."},sidebar:"tutorialSidebar",previous:{title:"Building Windows Cloud Images on OpenMetal",permalink:"/docs/manuals/engineers-notes/building-windows-cloud-images-on-openmetal"},next:{title:"Kubernetes - Failed to detach Persistent Volume",permalink:"/docs/manuals/engineers-notes/kubernetes-failed-to-detach-persistent-volume"}},s=[{value:"Introduction",id:"introduction",children:[],level:2},{value:"Prerequisites",id:"prerequisites",children:[{value:"Generate a clouds.yml from OpenStack",id:"generate-a-cloudsyml-from-openstack",children:[],level:3},{value:"Configure Terraform with clouds.yaml",id:"configure-terraform-with-cloudsyaml",children:[],level:3},{value:"Automate your OpenStack cloud",id:"automate-your-openstack-cloud",children:[],level:3}],level:2}],d={toc:s};function m(e){var t=e.components,r=(0,n.Z)(e,i);return(0,a.kt)("wrapper",(0,o.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"how-to-configure-terraform-to-automate-openstacks-resources"},"How to Configure Terraform to Automate OpenStack\u2019s Resources"),(0,a.kt)("h2",{id:"introduction"},"Introduction"),(0,a.kt)("p",null,"Although the Horizon dashboard provided in OpenStack is useful for most tasks,\ninfrastructure automation tools like Terraform exist to allow you to create your\ninfrastructure as code. This allows your infra teams to follow standard\ndevelopment flows and implement CI/CD to fully automate your cloud."),(0,a.kt)("p",null,"In this guide, you will configure Terraform to leverage OpenStack with a\ngenerated clouds.yaml."),(0,a.kt)("p",null,"When you\u2019re finished, you\u2019ll be able to automate your cloud like a pro!"),(0,a.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,a.kt)("p",null,"Before you begin this guide you\u2019ll need the following:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"A local machine or jumpstation (control node) with Terraform downloaded and installed.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"An OpenStack user with access to a project.  If you are the admin on an OpenMetal\nCloud, check out our OpenStack guides to create a project specifically for this.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"A text editor or IDE"))),(0,a.kt)("h3",{id:"generate-a-cloudsyml-from-openstack"},"Generate a clouds.yml from OpenStack"),(0,a.kt)("p",null,"To generate the clouds.yaml, first log into the Horizon dashboard."),(0,a.kt)("p",null,"Once logged in, click the API Access tab on the top left navigation area."),(0,a.kt)("p",null,"Select the \u201cDownload OpenStack RC File\u201d dropdown and select the \u201cOpenStack\nclouds.yaml file\u201d option."),(0,a.kt)("p",null,"The contents of the clouds.yaml should look like the following. If you want a\ncompletely seamless experience you will need to add your password to the auth\nsection."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},'clouds:\n  open_metal:\n    auth:\n      auth_url: <https://openstack-cluster.url:5000>\n      username: "docs"\n      project_id: 0cbe14b0db11426c8413d9f4eaa13311\n      project_name: "docs"\n      user_domain_name: "Default"\n    region_name: "iad3"\n    interface: "public"\n    identity_api_version: 3\n')),(0,a.kt)("p",null,"Now that we have the clouds.yaml we can configure Terraform to use it."),(0,a.kt)("h3",{id:"configure-terraform-with-cloudsyaml"},"Configure Terraform with clouds.yaml"),(0,a.kt)("p",null,"First, place the clouds.yaml into the current working directory of your\nTerraform file. It can also be placed in ",(0,a.kt)("inlineCode",{parentName:"p"},"~/.config/openstack")," or ",(0,a.kt)("inlineCode",{parentName:"p"},"/etc/openstack"),"."),(0,a.kt)("p",null,"Next we will modify the OpenStack provider in Terraform to specify the OpenStack\ncluster in our clouds.yaml. In our example our cluster is named open_metal be sure\nto use whichever cluster name that is specified in your file."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-terraform"},'provider "openstack" { cloud = "open_metal" }\n')),(0,a.kt)("p",null,"Once that is modified correctly, you should be able to run ",(0,a.kt)("inlineCode",{parentName:"p"},"terraform init")," to\nfinish the setup."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'$ terraform init\nInitializing the backend...\n\nTerraform has been successfully initialized! \n\nYou may now begin working with Terraform. Try running "terraform plan" to see\nany changes that are required for your infrastructure. All Terraform commands\nshould now work. \n\nIf you ever set or change modules or backend configuration for Terraform, rerun\nthis command to reinitialize your working directory. If you forget, other commands\nwill detect it and remind you to do so if necessary.\n')),(0,a.kt)("h3",{id:"automate-your-openstack-cloud"},"Automate your OpenStack cloud"),(0,a.kt)("p",null,"Now that everything is configured, you should be able to run Terraform modules\nor create your own and automate against your OpenStack cluster. One next step\nyou can take would be to edit your clouds.yaml, adding more clusters, to automate\nagainst multiple cloud infrastructures all at once!"),(0,a.kt)("p",null,"If you haven\u2019t worked with OpenStack recently, we invite you to try our new\nHosted Private Cloud. It is on-demand and billed by the hour. Combine the power\nof on demand OpenStack and Terraform to create massively scaled deployments with\nease."))}m.isMDXComponent=!0}}]);